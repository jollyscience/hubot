// Generated by CoffeeScript 1.6.1
(function() {
  var Codebase, auth, cb, url;

  Codebase = require('node-codebase');

  url = process.env.HUBOT_CODEBASE_URL || 'api3.codebasehq.com';

  auth = process.env.HUBOT_CODEBASE_AUTH || 'jollyscience/jollyscience:3kqo5bdat3uln2bnv90mvvti1stuonjg99bnz1p4';

  cb = new Codebase(url, auth);

  module.exports = function(robot) {
    robot.respond(/report codebase activity/i, function(msg) {
      msg.send('checking for codebase activity...');
      return cb.activity(function(err, data) {
        var item, _i, _len, _ref, _results,
          _this = this;
        if (err) {
          msg.send('There was an error!' + data);
        }
        _ref = data.events.event;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          _results.push((function(item) {
            return msg.send(item.title);
          })(item));
        }
        return _results;
      });
    });
    robot.respond(/report codebase projects/i, function(msg) {
      msg.send('checking for codebase projects...');
      return cb.projects.all(function(err, data) {
        var count, item, r, _fn, _i, _len, _ref,
          _this = this;
        if (err) {
          msg.send('There was an error!' + data);
        }
        count = 1;
        msg.send("The Codebase projects I know about are as follows...\n");
        r = "";
        _ref = data.projects.project;
        _fn = function(item) {
          r += "" + count + " - " + item.name + " (" + item.permalink + ")\n";
          return count++;
        };
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          _fn(item);
        }
        count--;
        msg.send(r);
        return msg.send("That is all of them. " + count + " in all.");
      });
    });
    robot.respond(/create codebase project (.*)/i, function(msg) {
      msg.send('oiling my tools for work...');
      msg.send('connecting to codebase...');
      return cb.projects.create(msg.match[1], function(err, data) {
        var project;
        msg.send('navigating the matrix...');
        if (err) {
          msg.send('CRAP! There was an error!' + data);
        }
        project = data.project;
        return msg.send("Project Created!\nName: \"" + project.name + "\"\nLink: " + project.permalink);
      });
    });
    return robot.respond(/delete codebase project (.*)/i, function(msg) {
      return console.log(robot.brain.userForName(name));
    });
  };

}).call(this);
