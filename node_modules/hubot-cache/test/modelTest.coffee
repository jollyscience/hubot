chai = require 'chai'
expect = chai.expect
should = chai.should()


{Model} = require '../libs/models/model'

describe 'Model', ->
  model = new Model
  it 'should be abe to set and retrieve data', ->
    key = 'someKey'
    value = 'someValue'
    # model.get().should.have.property
    model.set key, value
    model.get(key).should.equal value

  it 'should return undefined when key doesn\'t exist', ->
    should.not.exist(model.get 'randomKey')

  it 'should have a scoped dataObj not shared with any other Model instance', ->
    model2 = new Model
    model.set 'food', 'banana'
    model2.set 'food', 'cheese'

    model.get('food').should.equal('banana')
    model2.get('food').should.equal('cheese')

  it 'should be able to set the entire dataObj', ->
    obj = 
      name: 'Some Name'
      value: 'Some Value'

    model.set obj

    model.get('name').should.equal('Some Name')
    model.get('value').should.equal('Some Value')

  it 'should return the entire dataObj when no key is passed', ->
    obj = 
      name: 'Some Name'
      value: 'Some Value'

    model.set obj

    model.get().should.equal(obj)

{Client} = require '../libs/models/client'

describe 'Client', ->
  client1 = null
  it 'should have a name', ->
    client1 = new Client 'Some Test Client'
    client1.name.should.equal 'Some Test Client'
  it 'should have a address', ->
    client1.address = 'Some address'
    client1.address.should.equal 'Some address'
  it 'should have a namespace', ->
    client1.namespace.should.equal 'client'
  it 'should have a namespace', ->
    client1.namespace = 'Some namespace'
    client1.namespace.should.equal 'Some namespace'

{Project} = require '../libs/models/project'

describe 'Project', ->
  project1 = null
  it 'should have a name', ->
    project1 = new Project 'Some Test Project'
    project1.name.should.equal 'Some Test Project'
  it 'should have a shortname', ->
    project1.shortname = 'shortname'
    project1.shortname.should.equal 'shortname'
